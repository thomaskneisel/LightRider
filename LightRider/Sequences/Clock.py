from Sequence import Sequence
from Row import Row

class Clock(Sequence):
	def __init__(self):
		speed = 0.083
		Sequence.__init__(
			self, [
				Row(speed, [1,0,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [0,1,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [0,0,1,0,0,0,0,0,0,0,0,0]),
				Row(speed, [0,0,0,1,0,0,0,0,0,0,0,0]),
				Row(speed, [0,0,0,0,1,0,0,0,0,0,0,0]),
				Row(speed, [0,0,0,0,0,1,0,0,0,0,0,0]),
				Row(speed, [0,0,0,0,0,0,1,0,0,0,0,0]),
				Row(speed, [0,0,0,0,0,0,0,1,0,0,0,0]),
				Row(speed, [0,0,0,0,0,0,0,0,1,0,0,0]),
				Row(speed, [0,0,0,0,0,0,0,0,0,1,0,0]),
				Row(speed, [0,0,0,0,0,0,0,0,0,0,1,0]),
				Row(speed, [0,0,0,0,0,0,0,0,0,0,0,1]),

				Row(speed, [1,0,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,1,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,0,1,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,0,0,1,0,0,0,0,0,0,0,0]),
				Row(speed, [1,0,0,0,1,0,0,0,0,0,0,0]),
				Row(speed, [1,0,0,0,0,1,0,0,0,0,0,0]),
				Row(speed, [1,0,0,0,0,0,1,0,0,0,0,0]),
				Row(speed, [1,0,0,0,0,0,0,1,0,0,0,0]),
				Row(speed, [1,0,0,0,0,0,0,0,1,0,0,0]),
				Row(speed, [1,0,0,0,0,0,0,0,0,1,0,0]),
				Row(speed, [1,0,0,0,0,0,0,0,0,0,1,0]),
				Row(speed, [1,0,0,0,0,0,0,0,0,0,0,1]),
				
				Row(speed, [0,1,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,0,0,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,1,1,0,0,0,0,0,0,0,0,0]),
				Row(speed, [1,1,0,1,0,0,0,0,0,0,0,0]),
				Row(speed, [1,1,0,0,1,0,0,0,0,0,0,0]),
				Row(speed, [1,1,0,0,0,1,0,0,0,0,0,0]),
				Row(speed, [1,1,0,0,0,0,1,0,0,0,0,0]),
				Row(speed, [1,1,0,0,0,0,0,1,0,0,0,0]),
				Row(speed, [1,1,0,0,0,0,0,0,1,0,0,0]),
				Row(speed, [1,1,0,0,0,0,0,0,0,1,0,0]),
				Row(speed, [1,1,0,0,0,0,0,0,0,0,1,0]),
				Row(speed, [1,1,0,0,0,0,0,0,0,0,0,1]),

                                Row(speed, [0,1,1,0,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,0,1,0,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,0,0,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,0,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,0,0,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,0,0,0,1,0,0,0,0]),
                                Row(speed, [1,1,1,0,0,0,0,0,1,0,0,0]),
                                Row(speed, [1,1,1,0,0,0,0,0,0,1,0,0]),
                                Row(speed, [1,1,1,0,0,0,0,0,0,0,1,0]),
                                Row(speed, [1,1,1,0,0,0,0,0,0,0,0,1]),

                                Row(speed, [0,1,1,1,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,0,1,1,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,0,1,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,1,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,0,1,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,0,0,1,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,0,0,0,1]),

                                Row(speed, [0,1,1,1,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,0,1,1,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,0,1,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,0,1,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,0,0,1,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,0,0,0,1]),

                                Row(speed, [0,1,1,1,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,0,1,1,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,0,1,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,0,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,0,0,1,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,0,0,0,1]),

                                Row(speed, [0,1,1,1,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,0,1,1,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,0,1,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,0,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,0,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,0,0,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,0,0,0,1]),

                                Row(speed, [0,1,1,1,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,0,1,1,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,0,1,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,0,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,0,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,0,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,0,0,1]),

                                Row(speed, [0,1,1,1,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,0,1,1,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,0,1,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,0,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,0,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,0,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,0,1]),

                                Row(speed, [0,1,1,1,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,0,1,1,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,0,1,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,0,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,0,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,0,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,0,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,0,1]),

                                Row(speed, [0,1,1,1,1,1,1,1,1,1,1,0]),
                                Row(speed, [1,0,1,1,1,1,1,1,1,1,1,0]),
                                Row(speed, [1,1,0,1,1,1,1,1,1,1,1,0]),
                                Row(speed, [1,1,1,0,1,1,1,1,1,1,1,0]),
                                Row(speed, [1,1,1,1,0,1,1,1,1,1,1,0]),
                                Row(speed, [1,1,1,1,1,0,1,1,1,1,1,0]),
                                Row(speed, [1,1,1,1,1,1,0,1,1,1,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,0,1,1,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,1,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,1,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,0,0]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,1,1]),

                                Row(speed, [0,1,1,1,1,1,1,1,1,1,1,1]),
                                Row(speed, [1,0,1,1,1,1,1,1,1,1,1,1]),
                                Row(speed, [1,1,0,1,1,1,1,1,1,1,1,1]),
                                Row(speed, [1,1,1,0,1,1,1,1,1,1,1,1]),
                                Row(speed, [1,1,1,1,0,1,1,1,1,1,1,1]),
                                Row(speed, [1,1,1,1,1,0,1,1,1,1,1,1]),
                                Row(speed, [1,1,1,1,1,1,0,1,1,1,1,1]),
                                Row(speed, [1,1,1,1,1,1,1,0,1,1,1,1]),
                                Row(speed, [1,1,1,1,1,1,1,1,0,1,1,1]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,0,1,1]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,0,1]),
                                Row(speed, [1,1,1,1,1,1,1,1,1,1,1,0]),

                        ]
                )






